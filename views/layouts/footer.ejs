 


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/medium-zoom/dist/medium-zoom.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
<!-- prettier-ignore -->

 
<!-- <script>
  $(document).ready(function () {
  $('#placeOrderBtn').prop('disabled', true); 

  $('input[name="paymentMethod"]').change(function () {
    const selectedPayment = $('input[name="paymentMethod"]:checked').val();

    if (selectedPayment === 'Cash on delivery') {
      $('#placeOrderBtn').prop('disabled', false);
    } else {
      $('#placeOrderBtn').prop('disabled', true);
    }
  });

  $('#orderForm').submit(function (event) {
    event.preventDefault();
    if (!validateCheckoutForm()) {
      return;
    }

    const selectedPayment = $('input[name="payment"]:checked').val();

    if (selectedPayment === 'Cash on delivery') {
      $('#success_tic').modal('show');
    } else {
      initiateRazorpayPayment(); // Function to initiate Razorpay payment
    }
  });
})
 </script> -->
 <!-- <script>
 
  const payBtn = document.getElementById('payBtn');
  payBtn.addEventListener('click', async () => {
    console.log("hooi");
    
  })

</script> -->



<script>
  $(document).ready(function() {
    $('.dropdown-toggle').dropdown();
  });
</script>



  
<script> 
  document.getElementById('imageUpload').addEventListener('change', function() {
      const file = this.files[0];
      const reader = new FileReader(); 
      reader.onload = function(e) {
          const existingImage = document.querySelector('.existing-image');
          if (existingImage) {
              existingImage.src = e.target.result;
          } else {
              const newImage = document.createElement('img');
              newImage.src = e.target.result;
              newImage.alt = 'New Image';
              newImage.className = 'existing-image';
              newImage.style = 'width: 100px; height: 100px; position: relative; bottom: 10px;';
              this.parentNode.insertBefore(newImage, this.nextSibling);
          }
      }; 
      reader.readAsDataURL(file);
  });
</script>

<script>
  window.onload = function () { 
      if (window.performance.navigation.type === 1) { 
          document.querySelector('input[name="name"]').value = ''; 
          document.querySelector('.invalid-feedback').style.display = 'none';
      }
  };
</script>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const menuItems = document.querySelectorAll('.nk-menu-item');
  const currentPath = window.location.pathname; 
  menuItems.forEach(item => {
    const menuItemLink = item.querySelector('.nk-menu-link');
    const menuItemHref = menuItemLink.getAttribute('href'); 
    if (currentPath.includes(menuItemHref)) {
      item.classList.add('active');
    } 
    menuItemLink.addEventListener('click', function() { 
      menuItems.forEach(item => {
        item.classList.remove('active');
      }); 
      item.classList.add('active');
    });
  });
});
</script>

<script>
  $(document).ready(function() {
    $('.add-to-cart-btn').click(function(event) {
      event.preventDefault();  
      const url = $(this).attr('href'); 
      $.ajax({
        type: 'GET',
        url: url,
        success: function(response) { 
          $('#cartModal').modal('show'); 
          setTimeout(function(){
            $('#cartModal').modal('hide');
          }, 2000);
        },
        error: function(error) { 
          console.error('Error:', error);
        }
      });
    });
  });

  $(document).ready(function() { 
    $('.addToCartBtn').on('click', function(event) { 
      var productId = $(this).data('product-id'); 
      $('#cartModal').modal('show'); 
      setTimeout(function(){
        $('#cartModal').modal('hide');
      }, 2000);
    });
  });
</script>


<script>
  (function () {
    "use strict";
    var forms = document.querySelectorAll(".needs-validation");
    Array.prototype.slice.call(forms).forEach(function (form) {
      form.addEventListener(
        "submit",
        function (event) {
          if (!form.checkValidity()) {
            event.preventDefault();
            event.stopPropagation();
          } 
          form.classList.add("was-validated");
        },
        false
      );
    });
  })();
</script>
 
<script>
function previewFile() {
  const preview = document.getElementById('preview-image');
  const fileInput = document.getElementById('file-input');
  const file = fileInput.files[0];
  const reader = new FileReader(); 
  reader.onloadend = function() {
    preview.src = reader.result; 
    localStorage.setItem('savedImageData', reader.result);
  } 
  if (file) {
    reader.readAsDataURL(file);
  } else {
    preview.src = "#";  
  }
} 
window.onload = function() {
  const savedImageData = localStorage.getItem('savedImageData');
  const preview = document.getElementById('preview-image'); 
  if (savedImageData) {
    preview.src = savedImageData;
  }
}
</script>
 
<script>
  function downloadInvoice(orderDetails) {
    fetch('http://localhost:4000/download-invoice', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ orderDetails })
    })
    .then(response => { 
    })
    .catch(error => { 
    });
  }
</script>

<script>
 document.addEventListener("DOMContentLoaded", function () {
  async function openConfirmationModal(orderId) {
    const modal = document.getElementById('confirmationModal');
    const actionText = modal.querySelector('#actionText');
    const confirmActionBtn = modal.querySelector('#confirmActionBtn'); 
    try { 
      const response = await fetch(`/api/orders/${orderId}`);  
      const order = await response.json(); 
      if (!order) {
        console.error("Order not found");
        return;
      } 
      actionText.textContent = `cancel order ${order._id}`;   
      const bootstrapModal = new bootstrap.Modal(modal);
      bootstrapModal.show(); 
      confirmActionBtn.onclick = async function () {
        try {
          const cancelOrderForm = document.getElementById('cancelOrderForm');
          const formData = new FormData(cancelOrderForm); 
          const cancelResponse = await fetch(`/users/orderInfo/cancel-order/${orderId}`, {
            method: 'POST',
            body: formData,
          }); 
          if (cancelResponse.ok) {
            console.log("Order cancelled");
            bootstrapModal.hide(); 
          } else {
            console.error("Failed to cancel order"); 
          }
        } catch (error) {
          console.error(error); 
        }
      };
    } catch (error) {
      console.error(error); 
    }
  } 
  const orderId = 'someOrderId';  
  openConfirmationModal(orderId);
}); 
</script>


 
</body>
</html>